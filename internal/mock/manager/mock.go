// Code generated by MockGen. DO NOT EDIT.
// Source: ./manager.go

// Package mock_sock is a generated GoMock package.
package mock_sock

import (
	sock "github.com/victor-leee/side-car/internal/connection"
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConnManager is a mock of Manager interface.
type MockConnManager struct {
	ctrl     *gomock.Controller
	recorder *MockConnManagerMockRecorder
}

// MockConnManagerMockRecorder is the mock recorder for MockConnManager.
type MockConnManagerMockRecorder struct {
	mock *MockConnManager
}

// NewMockConnManager creates a new mock instance.
func NewMockConnManager(ctrl *gomock.Controller) *MockConnManager {
	mock := &MockConnManager{ctrl: ctrl}
	mock.recorder = &MockConnManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnManager) EXPECT() *MockConnManagerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConnManager) Get(serviceID, instanceID string) (net.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", serviceID, instanceID)
	ret0, _ := ret[0].(net.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockConnManagerMockRecorder) Get(serviceID, instanceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConnManager)(nil).Get), serviceID, instanceID)
}

// Put mocks base method.
func (m *MockConnManager) Put(serviceID, instanceID string, conn net.Conn) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", serviceID, instanceID, conn)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockConnManagerMockRecorder) Put(serviceID, instanceID, conn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockConnManager)(nil).Put), serviceID, instanceID, conn)
}

// UpdateServerInfo mocks base method.
func (m *MockConnManager) UpdateServerInfo(serviceID, instanceID string, tp sock.UpdateType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServerInfo", serviceID, instanceID, tp)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateServerInfo indicates an expected call of UpdateServerInfo.
func (mr *MockConnManagerMockRecorder) UpdateServerInfo(serviceID, instanceID, tp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServerInfo", reflect.TypeOf((*MockConnManager)(nil).UpdateServerInfo), serviceID, instanceID, tp)
}
